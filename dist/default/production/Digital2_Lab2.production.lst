

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 19:22:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  001E                     _ADRESH	set	30
   364  000C                     _PIR1bits	set	12
   365  0001                     _TMR0	set	1
   366  0006                     _PORTBbits	set	6
   367  000B                     _INTCONbits	set	11
   368  0005                     _PORTAbits	set	5
   369  0007                     _PORTC	set	7
   370  0008                     _PORTD	set	8
   371  001F                     _ADCON0bits	set	31
   372  008C                     _PIE1bits	set	140
   373  009F                     _ADCON1bits	set	159
   374  0081                     _OPTION_REGbits	set	129
   375  0096                     _IOCBbits	set	150
   376  0085                     _TRISAbits	set	133
   377  0086                     _TRISBbits	set	134
   378  0087                     _TRISC	set	135
   379  0088                     _TRISD	set	136
   380  0188                     _ANSELbits	set	392
   381  0189                     _ANSELH	set	393
   382  0188                     _ANSEL	set	392
   383                           
   384                           	psect	cinit
   385  000F                     start_initialization:	
   386                           ; #config settings
   387                           
   388  000F                     __initialization:
   389                           
   390                           ; Clear objects allocated to COMMON
   391  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   392  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   393  0011                     end_of_initialization:	
   394                           ;End of C runtime variable initialization code
   395                           
   396  0011                     __end_of__initialization:
   397  0011  0183               	clrf	3
   398  0012  120A  118A  29D4   	ljmp	_main	;jump to C main() function
   399                           
   400                           	psect	bssCOMMON
   401  0079                     __pbssCOMMON:
   402  0079                     _ADC_finish:
   403  0079                     	ds	1
   404  007A                     _ADC_value:
   405  007A                     	ds	1
   406                           
   407                           	psect	cstackCOMMON
   408  0070                     __pcstackCOMMON:
   409  0070                     ?_setup:
   410  0070                     ?_tabla:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_main:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_oli:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_oli:	
   420                           ; 1 bytes @ 0x0
   421                           
   422                           
   423                           ; 1 bytes @ 0x0
   424  0070                     	ds	3
   425  0073                     ??_setup:
   426  0073                     ?_ADC_setup:	
   427                           ; 1 bytes @ 0x3
   428                           
   429  0073                     ??_tabla:	
   430                           ; 1 bytes @ 0x3
   431                           
   432  0073                     ADC_setup@Channel:	
   433                           ; 1 bytes @ 0x3
   434                           
   435                           
   436                           ; 1 bytes @ 0x3
   437  0073                     	ds	1
   438  0074                     ADC_setup@Format:
   439                           
   440                           ; 1 bytes @ 0x4
   441  0074                     	ds	1
   442  0075                     ADC_setup@Vref:
   443  0075                     tabla@valor:	
   444                           ; 1 bytes @ 0x5
   445                           
   446                           
   447                           ; 1 bytes @ 0x5
   448  0075                     	ds	1
   449  0076                     ??_ADC_setup:
   450  0076                     tabla@hex:	
   451                           ; 1 bytes @ 0x6
   452                           
   453                           
   454                           ; 1 bytes @ 0x6
   455  0076                     	ds	2
   456  0078                     ADC_setup@ConClock:
   457                           
   458                           ; 1 bytes @ 0x8
   459  0078                     	ds	1
   460                           
   461                           	psect	cstackBANK0
   462  0020                     __pcstackBANK0:
   463  0020                     ??_main:
   464                           
   465                           ; 1 bytes @ 0x0
   466  0020                     	ds	1
   467                           
   468                           	psect	maintext
   469  01D4                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 46 in file "Interrupciones.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : B00/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       1       0       0       0
   492 ;;      Totals:         0       1       0       0       0
   493 ;;Total ram usage:        1 bytes
   494 ;; Hardware stack levels required when called:    2
   495 ;; This function calls:
   496 ;;		_ADC_setup
   497 ;;		_setup
   498 ;;		_tabla
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _main
   506  01D4                     _main:
   507  01D4                     l1188:	
   508                           ;incstack = 0
   509                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   510                           
   511                           
   512                           ;Interrupciones.c: 47:     PORTAbits.RA0 = 1;
   513  01D4  120A  118A  2201  120A  118A  	fcall	_setup
   514  01D9                     l1190:
   515                           
   516                           ;Interrupciones.c: 48:     PORTAbits.RA1 = 0;
   517  01D9  3002               	movlw	2
   518  01DA  1283               	bcf	3,5	;RP0=0, select bank0
   519  01DB  1303               	bcf	3,6	;RP1=0, select bank0
   520  01DC  00A0               	movwf	??_main
   521  01DD  0820               	movf	??_main,w
   522  01DE  00F3               	movwf	ADC_setup@Channel
   523  01DF  01F4               	clrf	ADC_setup@Format
   524  01E0  01F5               	clrf	ADC_setup@Vref
   525  01E1  3003               	movlw	3
   526  01E2  120A  118A  2015  120A  118A  	fcall	_ADC_setup
   527  01E7                     l1192:
   528                           
   529                           ;Interrupciones.c: 49:     PORTAbits.RA3 = 0;
   530  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   531  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   532  01E9  149F               	bsf	31,1	;volatile
   533  01EA                     l1194:
   534                           
   535                           ;Interrupciones.c: 51:     INTCONbits.PEIE = 1;
   536  01EA  0379               	decf	_ADC_finish,w
   537  01EB  1D03               	btfss	3,2
   538  01EC  29EE               	goto	u101
   539  01ED  29EF               	goto	u100
   540  01EE                     u101:
   541  01EE  29F1               	goto	l1200
   542  01EF                     u100:
   543  01EF                     l1196:
   544                           
   545                           ;Interrupciones.c: 52:     INTCONbits.RBIE = 1;
   546  01EF  01F9               	clrf	_ADC_finish
   547  01F0                     l1198:
   548                           
   549                           ;Interrupciones.c: 53:     INTCONbits.RBIF = 0;
   550  01F0  149F               	bsf	31,1	;volatile
   551  01F1                     l1200:
   552                           
   553                           ;Interrupciones.c: 55:     IOCBbits.IOCB1 = 1;
   554  01F1  087A               	movf	_ADC_value,w
   555  01F2  390F               	andlw	15
   556  01F3  120A  118A  2110  120A  118A  	fcall	_tabla
   557  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   558  01F9  1303               	bcf	3,6	;RP1=0, select bank0
   559  01FA  0088               	movwf	8	;volatile
   560  01FB                     l1202:
   561                           
   562                           ;Interrupciones.c: 56:     OPTION_REGbits.T0CS = 0;
   563  01FB  087A               	movf	_ADC_value,w
   564  01FC  0087               	movwf	7	;volatile
   565  01FD  29EA               	goto	l1194
   566  01FE  120A  118A  280C   	ljmp	start
   567  0201                     __end_of_main:
   568                           
   569                           	psect	text1
   570  0110                     __ptext1:	
   571 ;; *************** function _tabla *****************
   572 ;; Defined at:
   573 ;;		line 3 in file "display.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;  valor           1    wreg     unsigned char 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  valor           1    5[COMMON] unsigned char 
   578 ;;  hex             1    6[COMMON] unsigned char 
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      unsigned char 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         2       0       0       0       0
   590 ;;      Temps:          2       0       0       0       0
   591 ;;      Totals:         4       0       0       0       0
   592 ;;Total ram usage:        4 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; Hardware stack levels required when called:    1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           
   603                           ;psect for function _tabla
   604  0110                     _tabla:
   605                           
   606                           ;incstack = 0
   607                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
   608                           ;tabla@valor stored from wreg
   609  0110  00F5               	movwf	tabla@valor
   610  0111                     l852:
   611                           
   612                           ;display.c: 4:     uint8_t hex;;display.c: 5:     switch (valor) {
   613  0111  2962               	goto	l888
   614  0112                     l854:
   615                           
   616                           ;display.c: 7:             hex = 0b00111111;
   617  0112  303F               	movlw	63
   618  0113  00F3               	movwf	??_tabla
   619  0114  0873               	movf	??_tabla,w
   620  0115  00F6               	movwf	tabla@hex
   621                           
   622                           ;display.c: 8:             break;
   623  0116  299C               	goto	l890
   624  0117                     l856:
   625                           
   626                           ;display.c: 10:             hex = 0b00000110;
   627  0117  3006               	movlw	6
   628  0118  00F3               	movwf	??_tabla
   629  0119  0873               	movf	??_tabla,w
   630  011A  00F6               	movwf	tabla@hex
   631                           
   632                           ;display.c: 11:             break;
   633  011B  299C               	goto	l890
   634  011C                     l858:
   635                           
   636                           ;display.c: 13:             hex = 0b01011011;
   637  011C  305B               	movlw	91
   638  011D  00F3               	movwf	??_tabla
   639  011E  0873               	movf	??_tabla,w
   640  011F  00F6               	movwf	tabla@hex
   641                           
   642                           ;display.c: 14:             break;
   643  0120  299C               	goto	l890
   644  0121                     l860:
   645                           
   646                           ;display.c: 16:             hex = 0b01001111;
   647  0121  304F               	movlw	79
   648  0122  00F3               	movwf	??_tabla
   649  0123  0873               	movf	??_tabla,w
   650  0124  00F6               	movwf	tabla@hex
   651                           
   652                           ;display.c: 17:             break;
   653  0125  299C               	goto	l890
   654  0126                     l862:
   655                           
   656                           ;display.c: 19:             hex = 0b01100110;
   657  0126  3066               	movlw	102
   658  0127  00F3               	movwf	??_tabla
   659  0128  0873               	movf	??_tabla,w
   660  0129  00F6               	movwf	tabla@hex
   661                           
   662                           ;display.c: 20:             break;
   663  012A  299C               	goto	l890
   664  012B                     l864:
   665                           
   666                           ;display.c: 22:             hex = 0b01101101;
   667  012B  306D               	movlw	109
   668  012C  00F3               	movwf	??_tabla
   669  012D  0873               	movf	??_tabla,w
   670  012E  00F6               	movwf	tabla@hex
   671                           
   672                           ;display.c: 23:             break;
   673  012F  299C               	goto	l890
   674  0130                     l866:
   675                           
   676                           ;display.c: 25:             hex = 0b01111101;
   677  0130  307D               	movlw	125
   678  0131  00F3               	movwf	??_tabla
   679  0132  0873               	movf	??_tabla,w
   680  0133  00F6               	movwf	tabla@hex
   681                           
   682                           ;display.c: 26:             break;
   683  0134  299C               	goto	l890
   684  0135                     l868:
   685                           
   686                           ;display.c: 28:             hex = 0b00000111;
   687  0135  3007               	movlw	7
   688  0136  00F3               	movwf	??_tabla
   689  0137  0873               	movf	??_tabla,w
   690  0138  00F6               	movwf	tabla@hex
   691                           
   692                           ;display.c: 29:             break;
   693  0139  299C               	goto	l890
   694  013A                     l870:
   695                           
   696                           ;display.c: 31:             hex = 0b01111111;
   697  013A  307F               	movlw	127
   698  013B  00F3               	movwf	??_tabla
   699  013C  0873               	movf	??_tabla,w
   700  013D  00F6               	movwf	tabla@hex
   701                           
   702                           ;display.c: 32:             break;
   703  013E  299C               	goto	l890
   704  013F                     l872:
   705                           
   706                           ;display.c: 34:             hex = 0b01101111;
   707  013F  306F               	movlw	111
   708  0140  00F3               	movwf	??_tabla
   709  0141  0873               	movf	??_tabla,w
   710  0142  00F6               	movwf	tabla@hex
   711                           
   712                           ;display.c: 35:             break;
   713  0143  299C               	goto	l890
   714  0144                     l874:
   715                           
   716                           ;display.c: 37:             hex = 0b01110111;
   717  0144  3077               	movlw	119
   718  0145  00F3               	movwf	??_tabla
   719  0146  0873               	movf	??_tabla,w
   720  0147  00F6               	movwf	tabla@hex
   721                           
   722                           ;display.c: 38:             break;
   723  0148  299C               	goto	l890
   724  0149                     l876:
   725                           
   726                           ;display.c: 40:             hex = 0b01111100;
   727  0149  307C               	movlw	124
   728  014A  00F3               	movwf	??_tabla
   729  014B  0873               	movf	??_tabla,w
   730  014C  00F6               	movwf	tabla@hex
   731                           
   732                           ;display.c: 41:             break;
   733  014D  299C               	goto	l890
   734  014E                     l878:
   735                           
   736                           ;display.c: 43:             hex = 0b00111001;
   737  014E  3039               	movlw	57
   738  014F  00F3               	movwf	??_tabla
   739  0150  0873               	movf	??_tabla,w
   740  0151  00F6               	movwf	tabla@hex
   741                           
   742                           ;display.c: 44:             break;
   743  0152  299C               	goto	l890
   744  0153                     l880:
   745                           
   746                           ;display.c: 46:             hex = 0b01011110;
   747  0153  305E               	movlw	94
   748  0154  00F3               	movwf	??_tabla
   749  0155  0873               	movf	??_tabla,w
   750  0156  00F6               	movwf	tabla@hex
   751                           
   752                           ;display.c: 47:             break;
   753  0157  299C               	goto	l890
   754  0158                     l882:
   755                           
   756                           ;display.c: 49:             hex = 0b01111001;
   757  0158  3079               	movlw	121
   758  0159  00F3               	movwf	??_tabla
   759  015A  0873               	movf	??_tabla,w
   760  015B  00F6               	movwf	tabla@hex
   761                           
   762                           ;display.c: 50:             break;
   763  015C  299C               	goto	l890
   764  015D                     l884:
   765                           
   766                           ;display.c: 52:             hex = 0b01110001;
   767  015D  3071               	movlw	113
   768  015E  00F3               	movwf	??_tabla
   769  015F  0873               	movf	??_tabla,w
   770  0160  00F6               	movwf	tabla@hex
   771                           
   772                           ;display.c: 53:             break;
   773  0161  299C               	goto	l890
   774  0162                     l888:
   775  0162  0875               	movf	tabla@valor,w
   776  0163  00F3               	movwf	??_tabla
   777  0164  01F4               	clrf	??_tabla+1
   778                           
   779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   780                           ; Switch size 1, requested type "simple"
   781                           ; Number of cases is 1, Range of values is 0 to 0
   782                           ; switch strategies available:
   783                           ; Name         Instructions Cycles
   784                           ; simple_byte            4     3 (average)
   785                           ; direct_byte           11     8 (fixed)
   786                           ; jumptable            260     6 (fixed)
   787                           ;	Chosen strategy is simple_byte
   788  0165  0874               	movf	??_tabla+1,w
   789  0166  3A00               	xorlw	0	; case 0
   790  0167  1903               	skipnz
   791  0168  296A               	goto	l1284
   792  0169  299C               	goto	l890
   793  016A                     l1284:
   794                           
   795                           ; Switch size 1, requested type "simple"
   796                           ; Number of cases is 16, Range of values is 0 to 15
   797                           ; switch strategies available:
   798                           ; Name         Instructions Cycles
   799                           ; simple_byte           49    25 (average)
   800                           ; direct_byte           56     8 (fixed)
   801                           ; jumptable            260     6 (fixed)
   802                           ;	Chosen strategy is simple_byte
   803  016A  0873               	movf	??_tabla,w
   804  016B  3A00               	xorlw	0	; case 0
   805  016C  1903               	skipnz
   806  016D  2912               	goto	l854
   807  016E  3A01               	xorlw	1	; case 1
   808  016F  1903               	skipnz
   809  0170  2917               	goto	l856
   810  0171  3A03               	xorlw	3	; case 2
   811  0172  1903               	skipnz
   812  0173  291C               	goto	l858
   813  0174  3A01               	xorlw	1	; case 3
   814  0175  1903               	skipnz
   815  0176  2921               	goto	l860
   816  0177  3A07               	xorlw	7	; case 4
   817  0178  1903               	skipnz
   818  0179  2926               	goto	l862
   819  017A  3A01               	xorlw	1	; case 5
   820  017B  1903               	skipnz
   821  017C  292B               	goto	l864
   822  017D  3A03               	xorlw	3	; case 6
   823  017E  1903               	skipnz
   824  017F  2930               	goto	l866
   825  0180  3A01               	xorlw	1	; case 7
   826  0181  1903               	skipnz
   827  0182  2935               	goto	l868
   828  0183  3A0F               	xorlw	15	; case 8
   829  0184  1903               	skipnz
   830  0185  293A               	goto	l870
   831  0186  3A01               	xorlw	1	; case 9
   832  0187  1903               	skipnz
   833  0188  293F               	goto	l872
   834  0189  3A03               	xorlw	3	; case 10
   835  018A  1903               	skipnz
   836  018B  2944               	goto	l874
   837  018C  3A01               	xorlw	1	; case 11
   838  018D  1903               	skipnz
   839  018E  2949               	goto	l876
   840  018F  3A07               	xorlw	7	; case 12
   841  0190  1903               	skipnz
   842  0191  294E               	goto	l878
   843  0192  3A01               	xorlw	1	; case 13
   844  0193  1903               	skipnz
   845  0194  2953               	goto	l880
   846  0195  3A03               	xorlw	3	; case 14
   847  0196  1903               	skipnz
   848  0197  2958               	goto	l882
   849  0198  3A01               	xorlw	1	; case 15
   850  0199  1903               	skipnz
   851  019A  295D               	goto	l884
   852  019B  299C               	goto	l890
   853  019C                     l890:
   854                           
   855                           ;display.c: 55:     return hex;
   856  019C  0876               	movf	tabla@hex,w
   857  019D                     l136:
   858  019D  0008               	return
   859  019E                     __end_of_tabla:
   860                           
   861                           	psect	text2
   862  0201                     __ptext2:	
   863 ;; *************** function _setup *****************
   864 ;; Defined at:
   865 ;;		line 65 in file "Interrupciones.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		status,2
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0
   882 ;;      Totals:         0       0       0       0       0
   883 ;;Total ram usage:        0 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _setup
   895  0201                     _setup:
   896  0201                     l728:	
   897                           ;incstack = 0
   898                           ; Regs used in _setup: [status,2]
   899                           
   900                           
   901                           ;Interrupciones.c: 66: 
   902  0201  1683               	bsf	3,5	;RP0=1, select bank3
   903  0202  1703               	bsf	3,6	;RP1=1, select bank3
   904  0203  0188               	clrf	8	;volatile
   905                           
   906                           ;Interrupciones.c: 67: void __attribute__((picinterrupt(("")))) oli(void) {
   907  0204  0189               	clrf	9	;volatile
   908  0205                     l730:
   909                           
   910                           ;Interrupciones.c: 68:     if (INTCONbits.RBIF == 1) {
   911  0205  1508               	bsf	8,2	;volatile
   912                           
   913                           ;Interrupciones.c: 69:         if (PORTBbits.RB0 == 1) {
   914  0206  1683               	bsf	3,5	;RP0=1, select bank1
   915  0207  1303               	bcf	3,6	;RP1=0, select bank1
   916  0208  0188               	clrf	8	;volatile
   917                           
   918                           ;Interrupciones.c: 70:             PORTC++;
   919  0209  0187               	clrf	7	;volatile
   920  020A                     l732:
   921                           
   922                           ;Interrupciones.c: 71:         } else if (PORTBbits.RB1 == 1) {
   923  020A  1406               	bsf	6,0	;volatile
   924  020B                     l734:
   925                           
   926                           ;Interrupciones.c: 72:             PORTC--;
   927  020B  1486               	bsf	6,1	;volatile
   928  020C                     l736:
   929                           
   930                           ;Interrupciones.c: 73:         }
   931  020C  1005               	bcf	5,0	;volatile
   932  020D                     l738:
   933                           
   934                           ;Interrupciones.c: 74:         INTCONbits.RBIF = 0;
   935  020D  1085               	bcf	5,1	;volatile
   936  020E                     l740:
   937                           
   938                           ;Interrupciones.c: 75:     }
   939  020E  1505               	bsf	5,2	;volatile
   940  020F                     l742:
   941                           
   942                           ;Interrupciones.c: 76:     if (INTCONbits.T0IF == 1) {
   943  020F  1185               	bcf	5,3	;volatile
   944                           
   945                           ;Interrupciones.c: 77:         ADC_finish = 1;
   946  0210  1283               	bcf	3,5	;RP0=0, select bank0
   947  0211  1303               	bcf	3,6	;RP1=0, select bank0
   948  0212  0188               	clrf	8	;volatile
   949                           
   950                           ;Interrupciones.c: 78:         INTCONbits.T0IF = 0;
   951  0213  0187               	clrf	7	;volatile
   952  0214                     l744:
   953                           
   954                           ;Interrupciones.c: 79:         TMR0 = 236;
   955  0214  1405               	bsf	5,0	;volatile
   956  0215                     l746:
   957                           
   958                           ;Interrupciones.c: 80:     }
   959  0215  1085               	bcf	5,1	;volatile
   960  0216                     l748:
   961                           
   962                           ;Interrupciones.c: 81:     if (PIR1bits.ADIF == 1) {
   963  0216  1185               	bcf	5,3	;volatile
   964  0217                     l750:
   965                           
   966                           ;Interrupciones.c: 82:         PIR1bits.ADIF = 0;
   967  0217  178B               	bsf	11,7	;volatile
   968  0218                     l752:
   969                           
   970                           ;Interrupciones.c: 83:         ADC_value = ADRESH;
   971  0218  170B               	bsf	11,6	;volatile
   972  0219                     l754:
   973                           
   974                           ;Interrupciones.c: 84:         INTCONbits.T0IF = 0;
   975  0219  158B               	bsf	11,3	;volatile
   976  021A                     l756:
   977                           
   978                           ;Interrupciones.c: 85:         TMR0 = 236;
   979  021A  100B               	bcf	11,0	;volatile
   980  021B                     l758:
   981                           
   982                           ;Interrupciones.c: 86:     }
   983  021B  1683               	bsf	3,5	;RP0=1, select bank1
   984  021C  1303               	bcf	3,6	;RP1=0, select bank1
   985  021D  1416               	bsf	22,0	;volatile
   986  021E                     l760:
   987                           
   988                           ;Interrupciones.c: 87: 
   989  021E  1496               	bsf	22,1	;volatile
   990  021F                     l762:
   991                           
   992                           ;Interrupciones.c: 88: }
   993  021F  1281               	bcf	1,5	;volatile
   994  0220                     l764:
   995  0220  1181               	bcf	1,3	;volatile
   996  0221                     l766:
   997  0221  1181               	bcf	1,3	;volatile
   998  0222                     l768:
   999  0222  1101               	bcf	1,2	;volatile
  1000  0223                     l770:
  1001  0223  1481               	bsf	1,1	;volatile
  1002  0224                     l772:
  1003  0224  1001               	bcf	1,0	;volatile
  1004  0225                     l774:
  1005  0225  168B               	bsf	11,5	;volatile
  1006  0226                     l776:
  1007  0226  110B               	bcf	11,2	;volatile
  1008  0227  01F9               	clrf	_ADC_finish
  1009  0228                     l58:
  1010  0228  0008               	return
  1011  0229                     __end_of_setup:
  1012                           
  1013                           	psect	text3
  1014  0015                     __ptext3:	
  1015 ;; *************** function _ADC_setup *****************
  1016 ;; Defined at:
  1017 ;;		line 3 in file "ADC.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  ConClock        1    wreg     unsigned char 
  1020 ;;  Channel         1    3[COMMON] unsigned char 
  1021 ;;  Format          1    4[COMMON] unsigned char 
  1022 ;;  Vref            1    5[COMMON] unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  ConClock        1    8[COMMON] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         3       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0
  1036 ;;      Temps:          2       0       0       0       0
  1037 ;;      Totals:         6       0       0       0       0
  1038 ;;Total ram usage:        6 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           
  1049                           ;psect for function _ADC_setup
  1050  0015                     _ADC_setup:
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _ADC_setup: [wreg-fsr0h+status,2+status,0]
  1054                           ;ADC_setup@ConClock stored from wreg
  1055  0015  00F8               	movwf	ADC_setup@ConClock
  1056  0016                     l1018:
  1057                           
  1058                           ;ADC.c: 4:     switch (ConClock) {
  1059  0016  2836               	goto	l1032
  1060  0017                     l1020:
  1061                           
  1062                           ;ADC.c: 6:             ADCON0bits.ADCS = 0b00;
  1063  0017  303F               	movlw	-193
  1064  0018  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0019  1303               	bcf	3,6	;RP1=0, select bank0
  1066  001A  059F               	andwf	31,f	;volatile
  1067                           
  1068                           ;ADC.c: 7:             break;
  1069  001B  289B               	goto	l1070
  1070  001C                     l1022:
  1071                           
  1072                           ;ADC.c: 9:             ADCON0bits.ADCS = 0b01;
  1073  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1074  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1075  001E  081F               	movf	31,w	;volatile
  1076  001F  393F               	andlw	-193
  1077  0020  3840               	iorlw	64
  1078  0021  009F               	movwf	31	;volatile
  1079                           
  1080                           ;ADC.c: 10:             break;
  1081  0022  289B               	goto	l1070
  1082  0023                     l1024:
  1083                           
  1084                           ;ADC.c: 12:             ADCON0bits.ADCS = 0b10;
  1085  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0025  081F               	movf	31,w	;volatile
  1088  0026  393F               	andlw	-193
  1089  0027  3880               	iorlw	128
  1090  0028  009F               	movwf	31	;volatile
  1091                           
  1092                           ;ADC.c: 13:             break;
  1093  0029  289B               	goto	l1070
  1094  002A                     l1026:
  1095                           
  1096                           ;ADC.c: 15:             ADCON0bits.ADCS = 0b11;
  1097  002A  30C0               	movlw	192
  1098  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1099  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1100  002D  049F               	iorwf	31,f	;volatile
  1101                           
  1102                           ;ADC.c: 16:             break;
  1103  002E  289B               	goto	l1070
  1104  002F                     l1028:
  1105                           
  1106                           ;ADC.c: 18:             ADCON0bits.ADCS = 0b10;
  1107  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0031  081F               	movf	31,w	;volatile
  1110  0032  393F               	andlw	-193
  1111  0033  3880               	iorlw	128
  1112  0034  009F               	movwf	31	;volatile
  1113                           
  1114                           ;ADC.c: 19:             break;
  1115  0035  289B               	goto	l1070
  1116  0036                     l1032:
  1117  0036  0878               	movf	ADC_setup@ConClock,w
  1118  0037  00F6               	movwf	??_ADC_setup
  1119  0038  01F7               	clrf	??_ADC_setup+1
  1120                           
  1121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1122                           ; Switch size 1, requested type "simple"
  1123                           ; Number of cases is 1, Range of values is 0 to 0
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte            4     3 (average)
  1127                           ; direct_byte           11     8 (fixed)
  1128                           ; jumptable            260     6 (fixed)
  1129                           ;	Chosen strategy is simple_byte
  1130  0039  0877               	movf	??_ADC_setup+1,w
  1131  003A  3A00               	xorlw	0	; case 0
  1132  003B  1903               	skipnz
  1133  003C  283E               	goto	l1286
  1134  003D  282F               	goto	l1028
  1135  003E                     l1286:
  1136                           
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 4, Range of values is 1 to 4
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte           13     7 (average)
  1142                           ; direct_byte           23    11 (fixed)
  1143                           ; jumptable            263     9 (fixed)
  1144                           ;	Chosen strategy is simple_byte
  1145  003E  0876               	movf	??_ADC_setup,w
  1146  003F  3A01               	xorlw	1	; case 1
  1147  0040  1903               	skipnz
  1148  0041  2817               	goto	l1020
  1149  0042  3A03               	xorlw	3	; case 2
  1150  0043  1903               	skipnz
  1151  0044  281C               	goto	l1022
  1152  0045  3A01               	xorlw	1	; case 3
  1153  0046  1903               	skipnz
  1154  0047  2823               	goto	l1024
  1155  0048  3A07               	xorlw	7	; case 4
  1156  0049  1903               	skipnz
  1157  004A  282A               	goto	l1026
  1158  004B  282F               	goto	l1028
  1159  004C                     l1034:
  1160                           
  1161                           ;ADC.c: 23:             ADCON0bits.CHS = 0b0000;
  1162  004C  30C3               	movlw	-61
  1163  004D  059F               	andwf	31,f	;volatile
  1164                           
  1165                           ;ADC.c: 24:             break;
  1166  004E  28D5               	goto	l1072
  1167  004F                     l1036:
  1168                           
  1169                           ;ADC.c: 26:             ADCON0bits.CHS = 0b0001;
  1170  004F  081F               	movf	31,w	;volatile
  1171  0050  39C3               	andlw	-61
  1172  0051  3804               	iorlw	4
  1173  0052  009F               	movwf	31	;volatile
  1174                           
  1175                           ;ADC.c: 27:             break;
  1176  0053  28D5               	goto	l1072
  1177  0054                     l1038:
  1178                           
  1179                           ;ADC.c: 29:             ADCON0bits.CHS = 0b0010;
  1180  0054  081F               	movf	31,w	;volatile
  1181  0055  39C3               	andlw	-61
  1182  0056  3808               	iorlw	8
  1183  0057  009F               	movwf	31	;volatile
  1184                           
  1185                           ;ADC.c: 30:             break;
  1186  0058  28D5               	goto	l1072
  1187  0059                     l1040:
  1188                           
  1189                           ;ADC.c: 32:             ADCON0bits.CHS = 0b0011;
  1190  0059  081F               	movf	31,w	;volatile
  1191  005A  39C3               	andlw	-61
  1192  005B  380C               	iorlw	12
  1193  005C  009F               	movwf	31	;volatile
  1194                           
  1195                           ;ADC.c: 33:             break;
  1196  005D  28D5               	goto	l1072
  1197  005E                     l1042:
  1198                           
  1199                           ;ADC.c: 35:             ADCON0bits.CHS = 0b0100;
  1200  005E  081F               	movf	31,w	;volatile
  1201  005F  39C3               	andlw	-61
  1202  0060  3810               	iorlw	16
  1203  0061  009F               	movwf	31	;volatile
  1204                           
  1205                           ;ADC.c: 36:             break;
  1206  0062  28D5               	goto	l1072
  1207  0063                     l1044:
  1208                           
  1209                           ;ADC.c: 38:             ADCON0bits.CHS = 0b0101;
  1210  0063  081F               	movf	31,w	;volatile
  1211  0064  39C3               	andlw	-61
  1212  0065  3814               	iorlw	20
  1213  0066  009F               	movwf	31	;volatile
  1214                           
  1215                           ;ADC.c: 39:             break;
  1216  0067  28D5               	goto	l1072
  1217  0068                     l1046:
  1218                           
  1219                           ;ADC.c: 41:             ADCON0bits.CHS = 0b0110;
  1220  0068  081F               	movf	31,w	;volatile
  1221  0069  39C3               	andlw	-61
  1222  006A  3818               	iorlw	24
  1223  006B  009F               	movwf	31	;volatile
  1224                           
  1225                           ;ADC.c: 42:             break;
  1226  006C  28D5               	goto	l1072
  1227  006D                     l1048:
  1228                           
  1229                           ;ADC.c: 44:             ADCON0bits.CHS = 0b0111;
  1230  006D  081F               	movf	31,w	;volatile
  1231  006E  39C3               	andlw	-61
  1232  006F  381C               	iorlw	28
  1233  0070  009F               	movwf	31	;volatile
  1234                           
  1235                           ;ADC.c: 45:             break;
  1236  0071  28D5               	goto	l1072
  1237  0072                     l1050:
  1238                           
  1239                           ;ADC.c: 47:             ADCON0bits.CHS = 0b1000;
  1240  0072  081F               	movf	31,w	;volatile
  1241  0073  39C3               	andlw	-61
  1242  0074  3820               	iorlw	32
  1243  0075  009F               	movwf	31	;volatile
  1244                           
  1245                           ;ADC.c: 48:             break;
  1246  0076  28D5               	goto	l1072
  1247  0077                     l1052:
  1248                           
  1249                           ;ADC.c: 50:             ADCON0bits.CHS = 0b1001;
  1250  0077  081F               	movf	31,w	;volatile
  1251  0078  39C3               	andlw	-61
  1252  0079  3824               	iorlw	36
  1253  007A  009F               	movwf	31	;volatile
  1254                           
  1255                           ;ADC.c: 51:             break;
  1256  007B  28D5               	goto	l1072
  1257  007C                     l1054:
  1258                           
  1259                           ;ADC.c: 53:             ADCON0bits.CHS = 0b1010;
  1260  007C  081F               	movf	31,w	;volatile
  1261  007D  39C3               	andlw	-61
  1262  007E  3828               	iorlw	40
  1263  007F  009F               	movwf	31	;volatile
  1264                           
  1265                           ;ADC.c: 54:             break;
  1266  0080  28D5               	goto	l1072
  1267  0081                     l1056:
  1268                           
  1269                           ;ADC.c: 56:             ADCON0bits.CHS = 0b1011;
  1270  0081  081F               	movf	31,w	;volatile
  1271  0082  39C3               	andlw	-61
  1272  0083  382C               	iorlw	44
  1273  0084  009F               	movwf	31	;volatile
  1274                           
  1275                           ;ADC.c: 57:             break;
  1276  0085  28D5               	goto	l1072
  1277  0086                     l1058:
  1278                           
  1279                           ;ADC.c: 59:             ADCON0bits.CHS = 0b1100;
  1280  0086  081F               	movf	31,w	;volatile
  1281  0087  39C3               	andlw	-61
  1282  0088  3830               	iorlw	48
  1283  0089  009F               	movwf	31	;volatile
  1284                           
  1285                           ;ADC.c: 60:             break;
  1286  008A  28D5               	goto	l1072
  1287  008B                     l1060:
  1288                           
  1289                           ;ADC.c: 62:             ADCON0bits.CHS = 0b1101;
  1290  008B  081F               	movf	31,w	;volatile
  1291  008C  39C3               	andlw	-61
  1292  008D  3834               	iorlw	52
  1293  008E  009F               	movwf	31	;volatile
  1294                           
  1295                           ;ADC.c: 63:             break;
  1296  008F  28D5               	goto	l1072
  1297  0090                     l1062:
  1298                           
  1299                           ;ADC.c: 65:             ADCON0bits.CHS = 0b1110;
  1300  0090  081F               	movf	31,w	;volatile
  1301  0091  39C3               	andlw	-61
  1302  0092  3838               	iorlw	56
  1303  0093  009F               	movwf	31	;volatile
  1304                           
  1305                           ;ADC.c: 66:             break;
  1306  0094  28D5               	goto	l1072
  1307  0095                     l1064:
  1308                           
  1309                           ;ADC.c: 68:             ADCON0bits.CHS = 0b1111;
  1310  0095  303C               	movlw	60
  1311  0096  049F               	iorwf	31,f	;volatile
  1312                           
  1313                           ;ADC.c: 69:             break;
  1314  0097  28D5               	goto	l1072
  1315  0098                     l1066:
  1316                           
  1317                           ;ADC.c: 71:             ADCON0bits.CHS = 0b0000;
  1318  0098  30C3               	movlw	-61
  1319  0099  059F               	andwf	31,f	;volatile
  1320                           
  1321                           ;ADC.c: 72:             break;
  1322  009A  28D5               	goto	l1072
  1323  009B                     l1070:
  1324  009B  0873               	movf	ADC_setup@Channel,w
  1325  009C  00F6               	movwf	??_ADC_setup
  1326  009D  01F7               	clrf	??_ADC_setup+1
  1327                           
  1328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1329                           ; Switch size 1, requested type "simple"
  1330                           ; Number of cases is 1, Range of values is 0 to 0
  1331                           ; switch strategies available:
  1332                           ; Name         Instructions Cycles
  1333                           ; simple_byte            4     3 (average)
  1334                           ; direct_byte           11     8 (fixed)
  1335                           ; jumptable            260     6 (fixed)
  1336                           ;	Chosen strategy is simple_byte
  1337  009E  0877               	movf	??_ADC_setup+1,w
  1338  009F  3A00               	xorlw	0	; case 0
  1339  00A0  1903               	skipnz
  1340  00A1  28A3               	goto	l1288
  1341  00A2  2898               	goto	l1066
  1342  00A3                     l1288:
  1343                           
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 16, Range of values is 0 to 15
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte           49    25 (average)
  1349                           ; direct_byte           56     8 (fixed)
  1350                           ; jumptable            260     6 (fixed)
  1351                           ;	Chosen strategy is simple_byte
  1352  00A3  0876               	movf	??_ADC_setup,w
  1353  00A4  3A00               	xorlw	0	; case 0
  1354  00A5  1903               	skipnz
  1355  00A6  284C               	goto	l1034
  1356  00A7  3A01               	xorlw	1	; case 1
  1357  00A8  1903               	skipnz
  1358  00A9  284F               	goto	l1036
  1359  00AA  3A03               	xorlw	3	; case 2
  1360  00AB  1903               	skipnz
  1361  00AC  2854               	goto	l1038
  1362  00AD  3A01               	xorlw	1	; case 3
  1363  00AE  1903               	skipnz
  1364  00AF  2859               	goto	l1040
  1365  00B0  3A07               	xorlw	7	; case 4
  1366  00B1  1903               	skipnz
  1367  00B2  285E               	goto	l1042
  1368  00B3  3A01               	xorlw	1	; case 5
  1369  00B4  1903               	skipnz
  1370  00B5  2863               	goto	l1044
  1371  00B6  3A03               	xorlw	3	; case 6
  1372  00B7  1903               	skipnz
  1373  00B8  2868               	goto	l1046
  1374  00B9  3A01               	xorlw	1	; case 7
  1375  00BA  1903               	skipnz
  1376  00BB  286D               	goto	l1048
  1377  00BC  3A0F               	xorlw	15	; case 8
  1378  00BD  1903               	skipnz
  1379  00BE  2872               	goto	l1050
  1380  00BF  3A01               	xorlw	1	; case 9
  1381  00C0  1903               	skipnz
  1382  00C1  2877               	goto	l1052
  1383  00C2  3A03               	xorlw	3	; case 10
  1384  00C3  1903               	skipnz
  1385  00C4  287C               	goto	l1054
  1386  00C5  3A01               	xorlw	1	; case 11
  1387  00C6  1903               	skipnz
  1388  00C7  2881               	goto	l1056
  1389  00C8  3A07               	xorlw	7	; case 12
  1390  00C9  1903               	skipnz
  1391  00CA  2886               	goto	l1058
  1392  00CB  3A01               	xorlw	1	; case 13
  1393  00CC  1903               	skipnz
  1394  00CD  288B               	goto	l1060
  1395  00CE  3A03               	xorlw	3	; case 14
  1396  00CF  1903               	skipnz
  1397  00D0  2890               	goto	l1062
  1398  00D1  3A01               	xorlw	1	; case 15
  1399  00D2  1903               	skipnz
  1400  00D3  2895               	goto	l1064
  1401  00D4  2898               	goto	l1066
  1402  00D5                     l1072:
  1403                           
  1404                           ;ADC.c: 74:     if (Format == 1) {
  1405  00D5  0374               	decf	ADC_setup@Format,w
  1406  00D6  1D03               	btfss	3,2
  1407  00D7  28D9               	goto	u81
  1408  00D8  28DA               	goto	u80
  1409  00D9                     u81:
  1410  00D9  28DE               	goto	l106
  1411  00DA                     u80:
  1412  00DA                     l1074:
  1413                           
  1414                           ;ADC.c: 75:         ADCON1bits.ADFM = 1;
  1415  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1416  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1417  00DC  179F               	bsf	31,7	;volatile
  1418                           
  1419                           ;ADC.c: 76:     } else {
  1420  00DD  28F1               	goto	l1078
  1421  00DE                     l106:
  1422                           
  1423                           ;ADC.c: 77:         ADCON1bits.ADFM = 0;
  1424  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  1425  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  1426  00E0  139F               	bcf	31,7	;volatile
  1427  00E1  28F1               	goto	l1078
  1428  00E2                     l109:	
  1429                           ;ADC.c: 80:         case 1:
  1430                           
  1431                           
  1432                           ;ADC.c: 81:             ADCON1bits.VCFG0 = 0;
  1433  00E2  121F               	bcf	31,4	;volatile
  1434                           
  1435                           ;ADC.c: 82:             ADCON1bits.VCFG1 = 0;
  1436  00E3  129F               	bcf	31,5	;volatile
  1437                           
  1438                           ;ADC.c: 83:             break;
  1439  00E4  2907               	goto	l110
  1440  00E5                     l111:	
  1441                           ;ADC.c: 84:         case 2:
  1442                           
  1443                           
  1444                           ;ADC.c: 85:             ADCON1bits.VCFG0 = 1;
  1445  00E5  161F               	bsf	31,4	;volatile
  1446                           
  1447                           ;ADC.c: 86:             ADCON1bits.VCFG1 = 1;
  1448  00E6  169F               	bsf	31,5	;volatile
  1449                           
  1450                           ;ADC.c: 87:             break;
  1451  00E7  2907               	goto	l110
  1452  00E8                     l112:	
  1453                           ;ADC.c: 88:         case 3:
  1454                           
  1455                           
  1456                           ;ADC.c: 89:             ADCON1bits.VCFG0 = 0;
  1457  00E8  121F               	bcf	31,4	;volatile
  1458                           
  1459                           ;ADC.c: 90:             ADCON1bits.VCFG1 = 1;
  1460  00E9  169F               	bsf	31,5	;volatile
  1461                           
  1462                           ;ADC.c: 91:             break;
  1463  00EA  2907               	goto	l110
  1464  00EB                     l113:	
  1465                           ;ADC.c: 92:         case 4:
  1466                           
  1467                           
  1468                           ;ADC.c: 93:             ADCON1bits.VCFG0 = 1;
  1469  00EB  161F               	bsf	31,4	;volatile
  1470                           
  1471                           ;ADC.c: 94:             ADCON1bits.VCFG1 = 0;
  1472  00EC  129F               	bcf	31,5	;volatile
  1473                           
  1474                           ;ADC.c: 95:             break;
  1475  00ED  2907               	goto	l110
  1476  00EE                     l114:	
  1477                           ;ADC.c: 96:         default:
  1478                           
  1479                           
  1480                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1481  00EE  121F               	bcf	31,4	;volatile
  1482                           
  1483                           ;ADC.c: 98:             ADCON1bits.VCFG1 = 0;
  1484  00EF  129F               	bcf	31,5	;volatile
  1485                           
  1486                           ;ADC.c: 99:             break;
  1487  00F0  2907               	goto	l110
  1488  00F1                     l1078:
  1489  00F1  0875               	movf	ADC_setup@Vref,w
  1490  00F2  00F6               	movwf	??_ADC_setup
  1491  00F3  01F7               	clrf	??_ADC_setup+1
  1492                           
  1493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1494                           ; Switch size 1, requested type "simple"
  1495                           ; Number of cases is 1, Range of values is 0 to 0
  1496                           ; switch strategies available:
  1497                           ; Name         Instructions Cycles
  1498                           ; simple_byte            4     3 (average)
  1499                           ; direct_byte           11     8 (fixed)
  1500                           ; jumptable            260     6 (fixed)
  1501                           ;	Chosen strategy is simple_byte
  1502  00F4  0877               	movf	??_ADC_setup+1,w
  1503  00F5  3A00               	xorlw	0	; case 0
  1504  00F6  1903               	skipnz
  1505  00F7  28F9               	goto	l1290
  1506  00F8  28EE               	goto	l114
  1507  00F9                     l1290:
  1508                           
  1509                           ; Switch size 1, requested type "simple"
  1510                           ; Number of cases is 4, Range of values is 1 to 4
  1511                           ; switch strategies available:
  1512                           ; Name         Instructions Cycles
  1513                           ; simple_byte           13     7 (average)
  1514                           ; direct_byte           23    11 (fixed)
  1515                           ; jumptable            263     9 (fixed)
  1516                           ;	Chosen strategy is simple_byte
  1517  00F9  0876               	movf	??_ADC_setup,w
  1518  00FA  3A01               	xorlw	1	; case 1
  1519  00FB  1903               	skipnz
  1520  00FC  28E2               	goto	l109
  1521  00FD  3A03               	xorlw	3	; case 2
  1522  00FE  1903               	skipnz
  1523  00FF  28E5               	goto	l111
  1524  0100  3A01               	xorlw	1	; case 3
  1525  0101  1903               	skipnz
  1526  0102  28E8               	goto	l112
  1527  0103  3A07               	xorlw	7	; case 4
  1528  0104  1903               	skipnz
  1529  0105  28EB               	goto	l113
  1530  0106  28EE               	goto	l114
  1531  0107                     l110:
  1532                           
  1533                           ;ADC.c: 101:     ADCON0bits.ADON=1;
  1534  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0109  141F               	bsf	31,0	;volatile
  1537                           
  1538                           ;ADC.c: 102:     INTCONbits.GIE=1;
  1539  010A  178B               	bsf	11,7	;volatile
  1540                           
  1541                           ;ADC.c: 103:     INTCONbits.PEIE=1;
  1542  010B  170B               	bsf	11,6	;volatile
  1543                           
  1544                           ;ADC.c: 104:     PIE1bits.ADIE=1;
  1545  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1546  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1547  010E  170C               	bsf	12,6	;volatile
  1548  010F                     l115:
  1549  010F  0008               	return
  1550  0110                     __end_of_ADC_setup:
  1551                           
  1552                           	psect	text4
  1553  019E                     __ptext4:	
  1554 ;; *************** function _oli *****************
  1555 ;; Defined at:
  1556 ;;		line 99 in file "Interrupciones.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          3       0       0       0       0
  1573 ;;      Totals:         3       0       0       0       0
  1574 ;;Total ram usage:        3 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		Interrupt level 1
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           
  1584                           ;psect for function _oli
  1585  019E                     _oli:
  1586  019E                     i1l914:
  1587  019E  1C0B               	btfss	11,0	;volatile
  1588  019F  29A1               	goto	u3_21
  1589  01A0  29A2               	goto	u3_20
  1590  01A1                     u3_21:
  1591  01A1  29B4               	goto	i1l924
  1592  01A2                     u3_20:
  1593  01A2                     i1l916:
  1594  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1595  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1596  01A4  1C06               	btfss	6,0	;volatile
  1597  01A5  29A7               	goto	u4_21
  1598  01A6  29A8               	goto	u4_20
  1599  01A7                     u4_21:
  1600  01A7  29AD               	goto	i1l64
  1601  01A8                     u4_20:
  1602  01A8                     i1l918:
  1603  01A8  3001               	movlw	1
  1604  01A9  00F0               	movwf	??_oli
  1605  01AA  0870               	movf	??_oli,w
  1606  01AB  0787               	addwf	7,f	;volatile
  1607  01AC  29B3               	goto	i1l922
  1608  01AD                     i1l64:
  1609  01AD  1C86               	btfss	6,1	;volatile
  1610  01AE  29B0               	goto	u5_21
  1611  01AF  29B1               	goto	u5_20
  1612  01B0                     u5_21:
  1613  01B0  29B3               	goto	i1l922
  1614  01B1                     u5_20:
  1615  01B1                     i1l920:
  1616  01B1  3001               	movlw	1
  1617  01B2  0287               	subwf	7,f	;volatile
  1618  01B3                     i1l922:
  1619  01B3  100B               	bcf	11,0	;volatile
  1620  01B4                     i1l924:
  1621  01B4  1D0B               	btfss	11,2	;volatile
  1622  01B5  29B7               	goto	u6_21
  1623  01B6  29B8               	goto	u6_20
  1624  01B7                     u6_21:
  1625  01B7  29BF               	goto	i1l930
  1626  01B8                     u6_20:
  1627  01B8                     i1l926:
  1628  01B8  01F9               	clrf	_ADC_finish
  1629  01B9  0AF9               	incf	_ADC_finish,f
  1630  01BA  110B               	bcf	11,2	;volatile
  1631  01BB                     i1l928:
  1632  01BB  30EC               	movlw	236
  1633  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1634  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1635  01BE  0081               	movwf	1	;volatile
  1636  01BF                     i1l930:
  1637  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1638  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1639  01C1  1F0C               	btfss	12,6	;volatile
  1640  01C2  29C4               	goto	u7_21
  1641  01C3  29C5               	goto	u7_20
  1642  01C4                     u7_21:
  1643  01C4  29CD               	goto	i1l69
  1644  01C5                     u7_20:
  1645  01C5                     i1l932:
  1646  01C5  130C               	bcf	12,6	;volatile
  1647  01C6                     i1l934:
  1648  01C6  081E               	movf	30,w	;volatile
  1649  01C7  00F0               	movwf	??_oli
  1650  01C8  0870               	movf	??_oli,w
  1651  01C9  00FA               	movwf	_ADC_value
  1652  01CA                     i1l936:
  1653  01CA  110B               	bcf	11,2	;volatile
  1654  01CB  30EC               	movlw	236
  1655  01CC  0081               	movwf	1	;volatile
  1656  01CD                     i1l69:
  1657  01CD  0872               	movf	??_oli+2,w
  1658  01CE  008A               	movwf	10
  1659  01CF  0E71               	swapf	??_oli+1,w
  1660  01D0  0083               	movwf	3
  1661  01D1  0EFE               	swapf	btemp,f
  1662  01D2  0E7E               	swapf	btemp,w
  1663  01D3  0009               	retfie
  1664  01D4                     __end_of_oli:
  1665  007E                     btemp	set	126	;btemp
  1666  007E                     wtemp0	set	126
  1667                           
  1668                           	psect	intentry
  1669  0004                     __pintentry:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _oli: [wreg+status,2+status,0]
  1672                           
  1673  0004                     interrupt_function:
  1674  007E                     saved_w	set	btemp
  1675  0004  00FE               	movwf	btemp
  1676  0005  0E03               	swapf	3,w
  1677  0006  00F1               	movwf	??_oli+1
  1678  0007  080A               	movf	10,w
  1679  0008  00F2               	movwf	??_oli+2
  1680  0009  120A  118A  299E   	ljmp	_oli
  1681                           
  1682                           	psect	config
  1683                           
  1684                           ;Config register CONFIG1 @ 0x2007
  1685                           ;	Oscillator Selection bits
  1686                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1687                           ;	Watchdog Timer Enable bit
  1688                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1689                           ;	Power-up Timer Enable bit
  1690                           ;	PWRTE = OFF, PWRT disabled
  1691                           ;	RE3/MCLR pin function select bit
  1692                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1693                           ;	Code Protection bit
  1694                           ;	CP = OFF, Program memory code protection is disabled
  1695                           ;	Data Code Protection bit
  1696                           ;	CPD = OFF, Data memory code protection is disabled
  1697                           ;	Brown Out Reset Selection bits
  1698                           ;	BOREN = OFF, BOR disabled
  1699                           ;	Internal External Switchover bit
  1700                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1701                           ;	Fail-Safe Clock Monitor Enabled bit
  1702                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1703                           ;	Low Voltage Programming Enable bit
  1704                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1705                           ;	In-Circuit Debugger Mode bit
  1706                           ;	DEBUG = 0x1, unprogrammed default
  1707  2007                     	org	8199
  1708  2007  20F1               	dw	8433
  1709                           
  1710                           ;Config register CONFIG2 @ 0x2008
  1711                           ;	Brown-out Reset Selection bit
  1712                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1713                           ;	Flash Program Memory Self Write Enable bits
  1714                           ;	WRT = OFF, Write protection off
  1715  2008                     	org	8200
  1716  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_setup

Critical Paths under _oli in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _oli in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _oli in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _oli in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _oli in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     346
                                              0 BANK0      1     1      0
                          _ADC_setup
                              _setup
                              _tabla
 ---------------------------------------------------------------------------------
 (1) _tabla                                                4     4      0      30
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _oli                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_setup
   _setup
   _tabla

 _oli (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 19:22:09 2021

                     l58 0228                       u80 00DA                       u81 00D9  
                    l110 0107                      l111 00E5                      l112 00E8  
                    l113 00EB                      l114 00EE                      l106 00DE  
                    l115 010F                      l109 00E2                      l136 019D  
     __size_of_ADC_setup 00FB                      l730 0205                      l740 020E  
                    l732 020A                      l750 0217                      l742 020F  
                    l734 020B                      l760 021E                      l752 0218  
                    l744 0214                      l736 020C                      l728 0201  
                    l770 0223                      l762 021F                      l754 0219  
                    l746 0215                      l738 020D                      l772 0224  
                    l764 0220                      l756 021A                      l748 0216  
                    l860 0121                      l852 0111                      l774 0225  
                    l766 0221                      l758 021B                      l870 013A  
                    l862 0126                      l854 0112                      l776 0226  
                    l768 0222                      l880 0153                      l872 013F  
                    l864 012B                      l856 0117                      l882 0158  
                    l874 0144                      l866 0130                      l858 011C  
                    l890 019C                      l884 015D                      l876 0149  
                    l868 0135                      l878 014E                      l888 0162  
                    u100 01EF                      u101 01EE                      _oli 019E  
                   l1020 0017                     l1022 001C                     l1040 0059  
                   l1024 0023                     l1032 0036                     l1200 01F1  
                   l1050 0072                     l1042 005E                     l1034 004C  
                   l1026 002A                     l1018 0016                     l1202 01FB  
                   l1060 008B                     l1052 0077                     l1044 0063  
                   l1036 004F                     l1028 002F                     l1062 0090  
                   l1054 007C                     l1046 0068                     l1038 0054  
                   l1070 009B                     l1064 0095                     l1056 0081  
                   l1048 006D                     l1072 00D5                     l1074 00DA  
                   l1066 0098                     l1058 0086                     l1078 00F1  
                   l1190 01D9                     l1192 01E7                     l1290 00F9  
                   l1194 01EA                     l1284 016A                     l1196 01EF  
                   l1188 01D4                     l1286 003E                     l1198 01F0  
                   l1288 00A3                     ?_oli 0070                     i1l64 01AD  
                   i1l69 01CD                     _TMR0 0001                     u3_20 01A2  
                   u3_21 01A1                     u4_20 01A8                     u4_21 01A7  
                   u5_20 01B1                     u5_21 01B0                     u6_20 01B8  
                   u6_21 01B7                     u7_20 01C5                     u7_21 01C4  
                   _main 01D4                     btemp 007E                     start 000C  
                  ??_oli 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l920 01B1                    i1l930 01BF                    i1l922 01B3  
                  i1l914 019E                    i1l932 01C5                    i1l916 01A2  
                  i1l924 01B4                    i1l934 01C6                    i1l926 01B8  
                  i1l918 01A8                    i1l936 01CA                    i1l928 01BB  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _tabla 0110                    _setup 0201  
                  pclath 000A                    status 0003                    wtemp0 007E  
      __end_of_ADC_setup 0110          __initialization 000F             __end_of_main 0201  
                 ??_main 0020            ADC_setup@Vref 0075                   ?_tabla 0070  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       ADC_setup@Channel 0073                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_tabla 019E            __end_of_setup 0229  
         _OPTION_REGbits 0081                  ??_tabla 0073                  ??_setup 0073  
             __pmaintext 01D4               __pintentry 0004                _ADC_value 007A  
              _ADC_setup 0015                _ANSELbits 0188                  __ptext1 0110  
                __ptext2 0201                  __ptext3 0015                  __ptext4 019E  
           __size_of_oli 0036        ADC_setup@ConClock 0078     end_of_initialization 0011  
             ?_ADC_setup 0073                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 000F  
            __end_of_oli 01D4              ??_ADC_setup 0076          ADC_setup@Format 0074  
             tabla@valor 0075              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020           __size_of_tabla 008E           __size_of_setup 0028  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
             _ADC_finish 0079            __size_of_main 002D               _INTCONbits 000B  
               tabla@hex 0076                 intlevel1 0000  
